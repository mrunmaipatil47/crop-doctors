{"version":3,"sources":["components/CropTab.js","shared/constants.js","components/Dashboard.js","components/Uploader.js","components/Solution.js","App.js","serviceWorker.js","index.js","assets/images/citrus.jpg","assets/images/berry.jpg","assets/images/cotton.jpg","assets/images/00.jpg","assets/images/01.jpg","assets/images/10.jpg","assets/images/11.jpg","assets/images/20.jpg","assets/images/21.jpg","logo.svg","assets/images/citrus-bg.jpg","assets/images/berry-bg.jpg","assets/images/cotton-bg.jpg"],"names":["CropTab","props","react_default","a","createElement","es","to","concat","id","type","muicss_react","fluid","className","src","icon","alt","description","CROPS","citrus","diseases","name","solution","cure","image","citrusCanker","blackspot","berry","greyMould","rhizopusRot","cotton","bacterialBlight","greyMildew","Dashboard","map","crop","i","CropTab_CropTab","key","path","thumb","display","borderRadius","border","marginBottom","marginRight","width","height","padding","boxSizing","thumbInner","minWidth","overflow","img","Uploader","_useState","useState","_useState2","Object","slicedToArray","files","setFiles","_useState3","_useState4","filename","setFilename","_useDropzone","useDropzone","accept","onClick","noKeyboard","onDrop","acceptedFiles","file","assign","preview","URL","createObjectURL","getRootProps","getInputProps","thumbs","style","useEffect","forEach","revokeObjectURL","index_es","faCloudUploadAlt","faChartBar","bg","citrus_bg","berry_bg","cotton_bg","Solution","loader","setLoader","onActive","tab","setTimeout","margin","lib_default","color1","color2","color3","color4","onChange","value","ev","defaultSelectedIndex","parseInt","disease","label","source","createMemorySource","history","createHistory","App","textAlign","logo","Uploader_Uploader","Solution_Solution","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.a4c05144.chunk.js","sourcesContent":["import React from 'react';\nimport { Container } from 'muicss/react';\nimport './CropTab.css';\nimport { Link } from '@reach/router';\n\nexport function CropTab(props) {\n\treturn (\n\t\t<Link to={`/uploader/${props.id}/${props.type}`}>\n\t\t\t<Container fluid={true} className=\"box cropType-container\">\n\t\t\t\t<img src={props.icon} alt=\"\" />\n\t\t\t\t<div className=\"column\">\n\t\t\t\t\t<h3 className=\"row\">{props.type}</h3>\n\t\t\t\t\t<p className=\"row\">{props.description}</p>\n\t\t\t\t</div>\n\t\t\t</Container>\n\t\t</Link>\n\t);\n}\n","import citrus from '../assets/images/citrus.jpg'\nimport berry from '../assets/images/berry.jpg'\nimport cotton from '../assets/images/cotton.jpg'\nimport citrusCanker from '../assets/images/00.jpg'\nimport blackspot from '../assets/images/01.jpg'\nimport greyMould from '../assets/images/10.jpg'\nimport rhizopusRot from '../assets/images/11.jpg'\nimport bacterialBlight from '../assets/images/20.jpg'\nimport greyMildew from '../assets/images/21.jpg'\n\nexport const CROPS = [{\n    type: 'Citrus-Fruits',\n    icon: citrus,\n    description: 'Citrus is a genus of flowering trees and shrubs in the rue family, Rutaceae. Plants in the genus produce citrus fruits, including important crops such as oranges, lemons, grapefruits, pomelos, and limes.',\n    diseases: [{\n        name: 'Citrus Canker',\n    },\n    {\n        name: 'Citrus Black Spot',\n    },\n    ],\n    solution: [{\n        name: 'Citrus Canker',\n        // eslint-disable-next-line no-multi-str\n        description: 'DISEASE: Citrus canker \\n \\\n        PATHOGEN: Xanthomonas axonopodis pv. citri and Xanthomonas axonopodis pv. aurantifolii  \\n \\\n        HOSTS: Numerous species, cultivars, and hybrids of citrus and citrus relatives including orange, grapefruit, pummelo, mandarin, lemon, lime, tangerine, tangelo, sour orange, rough lemon, calamondin, trifoliate orange, and kumquat.',\n        cure: 'Copper-based fungicides or bactericides can provide a barrier against infection, but they will not treat an existing infection. Control for citrus canker is better achieved through prevention. Once you spot a lesion on your citrus tree, that lesion can\\'t be cured.',\n        image: citrusCanker\n    }, {\n        name: 'Citrus Black Spot',\n        // eslint-disable-next-line no-multi-str\n        description: 'DISEASE: Citrus Black Spot \\n \\\n        Host: Citrus Fruits \\\n        Causal agents: Phyllosticta citricarpa \\\n        Description : Citrus black spot is a fungal disease caused by Guignardia citricarpa. This Ascomycete fungus affects citrus plants throughout subtropical climates, causing a reduction in both fruit quantity and quality. Symptoms include both fruit and leaf lesions, the latter being critical to inter-tree dispersal.',\n        cure: 'Biological Control :  Spore monitoring through traps and rainfall and dew measurements can help to determine the timing for fungicide application. A number of copper products can be used against this pathogen. Post-harvest treatments with hot water or waxing of the fruits also decrease the viability of the pathogen and the  manifestation of symptoms. Hot water Treatment and Waxing the fruit',\n        image: blackspot\n    }],\n}, {\n    type: 'Strawberries',\n    icon: berry,\n    // eslint-disable-next-line no-multi-str\n    description: 'DISEASE : Grey Mould \\\n        PATHOGEN : Botrytis cinerea is an unspecialized necrotrophic fungus that produces grayish masses of mycelium, conidiophores, and conidia on the surface of rotted tissues \\\n    The garden strawberry is a widely grown hybrid species of the genus Fragaria, collectively known as the strawberries, which are cultivated worldwide for their fruit.',\n    diseases: [{\n        name: 'Grey mould',\n    },\n    {\n        name: 'Rhizopus Rot',\n    },\n    ],\n    solution: [{\n        name: 'Grey mould',\n        // eslint-disable-next-line no-multi-str\n        cure: 'Integrated Pest Management Strategies\\\n        1. Remove infected plant parts. Collecting and removing infected plant parts can slow the spread of the disease. This should be done frequently especially during fruit bearing time.\\\n        2. Improve air circulation around the plants. Space plants widely and prune leaves so that adequate air flow may speed drying of the vegetation. Work with plants when they are dry.\\\n        3. Avoid spring applications of nitrogen fertilizer. High nitrogen levels promote excessive leaf growth and available surfaces for infection.\\\n        4. Harvest regularly. Remove and dispose of rotten or severely damaged fruit throughout the season.\\\n        5. Move plants to a better location.Select sites for planting that have good air circulation, are not shaded, and not subject to frost injury.\\\n        6. Use fungicide sprays, if necessary. Apply a fungicide at 5–10% bloom and at full bloom. Fungicides may be reapplied every 7–10 days during wet seasons. Pesticides registered for use include captan, chlorothalonil (Daconil), copper, iprodione (Chipco), mancozeb, sulfur, thiram, and ziram.',\n        image: greyMould,\n    }, {\n        name: 'Rhizopus Rot',\n        // eslint-disable-next-line no-multi-str\n        cure: 'DISEASE: RHIZOPUS ROT \\n \\\n            Rhizopus is a genus of common saprophytic fungi on plants and specialized parasites on animals. They are found on a wide variety of organic substrates, including \"mature fruits and vegetables\",[2] jellies, syrups, leather, bread, peanuts, and tobacco. \\\n        Cultural Control \\n \\\n        Field sanitation is extremely important. Handle fruit with care at all times. Remove all ripe fruit from the field at harvest. Be sure when fruit is being picked that the entire fruit is removed from the stem, not leaving behind the fleshy receptacle of the fruit as it can serve as a site for invasion by fungusRemove overripe fruit in the field.Burn or bury waste fruit from around the packing shed',\n        image: rhizopusRot\n    }],\n}, {\n    type: 'Cotton',\n    icon: cotton,\n    description: 'Cotton is a soft, fluffy staple fiber that grows in a boll, or protective case, around the seeds of the cotton plants of the genus Gossypium in the mallow family Malvaceae. The fiber is almost pure cellulose.',\n    diseases: [\n        {\n            name: 'Bacterial Blight',\n        },\n        {\n            name: 'Grey Mildew',\n        },\n    ],\n    solution: [{\n        name: 'Bacterial Blight',\n        cure: ' Cotton bacterial blight is caused by Xanthomonas citri subsp. malvacearum, a bacterium that survives in infested crop debris or seeds. It is one of the most devastating diseases of cotton. Significant rainfall events and high humidity, combined with warm temperatures, favor the development of the disease. The bacteria enter leaf tissues through the natural openings in the leaves (stomata) or mechanical wounds. This  explains why the disease is most severe following storms that produce heavy rains or hail. Since the infections may be seedborne, the delinting of seeds through an acid treatment has been instrumental in minimizing the spread of bacterial blight through contaminated seed. Seedlings growing from volunteer plants may also be a source of primary infection by bacterial blight. ',\n        image: bacterialBlight\n    }, {\n        name: 'Grey Mildew',\n            cure: 'Biological Control : \\n Seed treatment with products containing Pseudomonas fluorescens (10g/kg seeds) can be done. Spraying of a solution containing this bacterium every 10 days reduces the infection significantly. Other bacteria (Bacillus circulans and Serratia marcescens) have been used to control other species of Mycosphaerella and reduce the incidence of related diseases in other crops. Spray of 3 gm wettable sulphur per one litre of water or dusting of 8-10 kg of sulphur powder per hectare are other possibilities. ',\n        image: greyMildew\n    }],\n}];","import React from 'react'\nimport { Container } from 'muicss/react'\nimport { CropTab } from '../components/CropTab'\nimport { CROPS } from '../shared/constants'\n\nexport function Dashboard() {\n    return (\n        <Container className='master-container'>\n            { CROPS.map((crop, i) => <CropTab key={ i } id={ i } path={ `/uploader/${crop.type}` } icon={ crop.icon } type={ crop.type } description={ crop.description } />) }\n        </Container>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { Link } from '@reach/router';\nimport { Button } from 'muicss/react';\nimport { useDropzone } from 'react-dropzone';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChartBar, faCloudUploadAlt } from '@fortawesome/free-solid-svg-icons'\nimport './Uploader.css';\n\n\nconst thumb = {\n\tdisplay: 'inline-flex',\n\tborderRadius: 2,\n\tborder: '1px solid #eaeaea',\n\tmarginBottom: 8,\n\tmarginRight: 8,\n\twidth: 100,\n\theight: 100,\n\tpadding: 4,\n\tboxSizing: 'border-box',\n};\n\nconst thumbInner = {\n\tdisplay: 'flex',\n\tminWidth: 0,\n\toverflow: 'hidden',\n};\n\nconst img = {\n\tdisplay: 'block',\n\twidth: 'auto',\n\theight: '100%',\n};\n\nexport function Uploader(props) {\n\tconst [files, setFiles] = useState([]);\n\tconst [filename, setFilename] =useState('')\n\tconst { getRootProps, getInputProps } = useDropzone({\n\t\taccept: 'image/*',\n\t\tonClick: true,\n\t\tnoKeyboard: true,\n\t\tonDrop: acceptedFiles => {\n\t\t\tsetFiles(\n\t\t\t\tacceptedFiles.map(file => {\n\t\t\t\t\tsetFilename(file.name)\n\t\t\t\t\treturn Object.assign(file, {\n\t\t\t\t\t\tpreview: URL.createObjectURL(file),\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\t)\n\t\t\t);\n\t\t},\n\t});\n\n\tconst thumbs = files.map(file => (\n\t\t<div style={thumb} key={file.name}>\n\t\t\t<div style={thumbInner}>\n\t\t\t\t<img src={file.preview} style={img} alt=\"\" />\n\t\t\t</div>\n\t\t</div>\n\t));\n\n\tuseEffect(\n\t\t() => () => {\n\t\t\tfiles.forEach(file => URL.revokeObjectURL(file.preview));\n\t\t},\n\t\t[files]\n\t);\n\n\treturn (\n\t\t<section className=\"thumbsContainer\">\n\t\t\t<div {...getRootProps({ className: 'dropzone' })}>\n\t\t\t\t<input {...getInputProps()} />\n\t\t\t\t<p>Drag 'n' drop some files here, or click to select files</p>\n\t\t\t\t<em>(Only *.jpeg and *.png images will be accepted)</em>\n\t\t\t\t<Button className=\"button\"><FontAwesomeIcon icon={ faCloudUploadAlt } />{ ` Upload` }</Button>\n\t\t\t</div>\n\t\t\t<div>{thumbs}</div>\n\t\t\t<div>\n\t\t\t\t<Link to={ `/solution/${props.id}/${filename}` }>\n\t\t\t\t\t<Button className=\"button\" type=\"button\">\n\t\t\t\t\t\t<FontAwesomeIcon icon={faChartBar} /> Run Analysis\n\t\t\t\t\t</Button>\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t</section>\n\t);\n}\n","import React, { useState, useEffect } from 'react';\nimport { Tabs, Tab, Panel } from 'muicss/react';\nimport MDSpinner from 'react-md-spinner';\nimport './Solution.css';\nimport citrus_bg from '../assets/images/citrus-bg.jpg';\nimport berry_bg from '../assets/images/berry-bg.jpg';\nimport cotton_bg from '../assets/images/cotton-bg.jpg';\nimport { CROPS } from '../shared/constants'\n\nconst bg = [citrus_bg, berry_bg, cotton_bg];\n\nexport function Solution(props) {\n    const [loader, setLoader] = useState(true);\n\n    useEffect(() => {\n        setTimeout(() => setLoader(false), 10000);\n    });\n    function onChange(i, value, tab, ev) {\n\n    }\n\n    function onActive(tab) {\n\n    }\n\n    return (\n\n        loader ? (\n            <div style={ { margin: 20 } }>\n                <MDSpinner color1=\"#00897B\" color2=\"#C0CA33\" color3=\"#7CB342\" color4=\"#43A047\" />\n            </div>\n        ) : (<Panel>\n            <div>\n                <img className=\"Solution-bg\" src={ bg[props.id] } alt=\"\" />\n                <h2>{ props.type }</h2>\n                <Tabs  onChange={ onChange } defaultSelectedIndex={ parseInt(props.file[0]) }>\n                    { CROPS[props.id].diseases.map((disease, i) =>\n                        <Tab className='Solution-Tab' key={ i } value={ `${i}` } label={ disease.name } onActive={ onActive }>\n                            <img className='Solution-img' src={ CROPS[props.id].solution[i].image } alt=''/>\n                            <p className='Solution-description'>{ CROPS[props.id].solution[i].description }</p>\n                            <div className='Solution-cure'>{ CROPS[props.id].solution[i].cure }</div>\n                        </Tab>) }\n                </Tabs>\n            </div>\n        </Panel>\n            )\n\n    );\n}\n","import React from 'react';\nimport { Appbar } from 'muicss/react';\nimport { Dashboard } from './components/Dashboard';\nimport { Uploader } from './components/Uploader'\n// import { Solution } from './components/Solution'\nimport { Router } from '@reach/router';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Solution } from './components/Solution';\n\nimport {\n\tcreateMemorySource,\n\tcreateHistory,\n\tLocationProvider\n} from \"@reach/router\"\n\nlet source = createMemorySource(\"/\")\nlet history = createHistory(source)\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Appbar>\n\t\t\t\t<table width=\"100%\">\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td className=\"mui--appbar-height\" style={ { textAlign: \"center\" } }>\n\t\t\t\t\t\t\t\t<img className=\"App-logo\" src={ logo } alt=\"\" />\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</Appbar>\n\t\t\t<LocationProvider history={ history }>\n\t\t\t\t<Router>\n\t\t\t\t\t<Dashboard path=\"/\" />\n\t\t\t\t\t<Uploader path='/uploader/:id/:type' />\n\t\t\t\t\t<Solution path='/solution/:id/:file' />\n\t\t\t\t</Router>\n\t\t\t</LocationProvider>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/citrus.8e5faf7e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/berry.3f9677ef.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cotton.01a0f7f5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/00.df66a268.jpg\";","module.exports = __webpack_public_path__ + \"static/media/01.e2b9f788.jpg\";","module.exports = __webpack_public_path__ + \"static/media/10.611a5624.jpg\";","module.exports = __webpack_public_path__ + \"static/media/11.b82cb72d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/20.4e77d85e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/21.cdf4ea94.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.a1ed3c62.svg\";","module.exports = __webpack_public_path__ + \"static/media/citrus-bg.457ab370.jpg\";","module.exports = __webpack_public_path__ + \"static/media/berry-bg.0f63204a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cotton-bg.a47eca30.jpg\";"],"sourceRoot":""}